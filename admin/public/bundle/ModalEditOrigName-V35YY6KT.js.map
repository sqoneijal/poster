{
  "version": 3,
  "sources": ["../../src/page/Admin/Content/Images/ModalEditOrigName.jsx"],
  "sourcesContent": ["import React, { useLayoutEffect, useState } from \"react\";\nimport { ButtonGroup, Modal } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as h from \"~/Helpers\";\nimport { setModule } from \"~/redux\";\n\nconst ModalEditOrigName = ({ setListContent, listContent }) => {\n   const { module, init } = useSelector((e) => e.redux);\n   const { openModalEditOrigName, detailContent } = module;\n   const dispatch = useDispatch();\n\n   // bool\n   const [isSubmit, setIsSubmit] = useState(false);\n\n   // object\n   const [input, setInput] = useState({});\n   const [errors, setErrors] = useState({});\n\n   useLayoutEffect(() => {\n      if (openModalEditOrigName && h.objLength(detailContent)) setInput({ ...detailContent });\n      return () => {};\n   }, [openModalEditOrigName, detailContent]);\n\n   const clearProps = () => {\n      setInput({});\n      setErrors({});\n   };\n\n   const handleClose = () => {\n      clearProps();\n      dispatch(setModule({ ...module, openModalEditOrigName: false, detailContent: {} }));\n   };\n\n   const submit = (e) => {\n      e.preventDefault();\n      const formData = { user_modified: h.parse(\"username\", init) };\n      Object.keys(input).forEach((key) => (formData[key] = input[key]));\n\n      setIsSubmit(true);\n      const fetch = h.post(`/updateorigname`, formData);\n      fetch.then((res) => {\n         if (typeof res === \"undefined\") return;\n\n         const { data } = res;\n         if (typeof data.code !== \"undefined\" && h.parse(\"code\", data) !== 200) {\n            h.notification(false, h.parse(\"message\", data));\n            return;\n         }\n\n         setErrors(data.errors);\n         h.notification(data.status, data.msg_response);\n\n         if (!data.status) return;\n\n         const newData = [];\n         listContent.map((row) => {\n            if (h.toInt(h.parse(\"id\", row)) === h.toInt(formData.id)) {\n               newData.push({ ...row, origname: h.parse(\"origname\", input) });\n            } else {\n               newData.push(row);\n            }\n         });\n         setListContent(newData);\n\n         clearProps();\n         dispatch(setModule({ ...module, openModalEditOrigName: false, detailContent: {} }));\n      });\n      fetch.finally(() => {\n         setIsSubmit(false);\n      });\n   };\n\n   return (\n      <Modal show={openModalEditOrigName} onHide={clearProps} backdrop=\"static\">\n         <Modal.Header>\n            <Modal.Title>Perbaharui Nama File</Modal.Title>\n         </Modal.Header>\n         <Modal.Body>\n            {h.form_text(\n               `Nama File`,\n               `origname`,\n               { onChange: (e) => setInput((prev) => ({ ...prev, [e.target.name]: e.target.value })), value: h.parse(`origname`, input) },\n               true,\n               errors\n            )}\n         </Modal.Body>\n         <Modal.Footer>\n            <ButtonGroup>\n               {h.buttons(`Simpan`, isSubmit, {\n                  onClick: isSubmit ? null : submit,\n               })}\n               {h.buttons(`Batal`, false, {\n                  variant: \"danger\",\n                  onClick: () => handleClose(),\n               })}\n            </ButtonGroup>\n         </Modal.Footer>\n      </Modal>\n   );\n};\nexport default ModalEditOrigName;\n"],
  "mappings": "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",
  "names": ["import_react", "ModalEditOrigName", "setListContent", "listContent", "module", "init", "useSelector", "e", "openModalEditOrigName", "detailContent", "dispatch", "useDispatch", "isSubmit", "setIsSubmit", "input", "setInput", "errors", "setErrors", "objLength", "clearProps", "handleClose", "setModule", "submit", "formData", "parse", "key", "fetch", "post", "res", "data", "notification", "newData", "row", "toInt", "React", "Modal_default", "form_text", "prev", "ButtonGroup_default", "buttons", "ModalEditOrigName_default"]
}
