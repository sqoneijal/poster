{
  "version": 3,
  "sources": ["../../src/page/Admin/Content/Images/Lists.jsx"],
  "sourcesContent": ["import lozad from \"lozad\";\nimport React, { useLayoutEffect, useRef, useState } from \"react\";\nimport { Card, Col, Dropdown } from \"react-bootstrap\";\nimport { Bars } from \"react-loader-spinner\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Each } from \"~/Each\";\nimport * as h from \"~/Helpers\";\nimport { setModule } from \"~/redux\";\n\nconst ModalEditOrigName = React.lazy(() => import(\"./ModalEditOrigName\"));\n\nconst Lists = ({ totalData, listContent, getContent, setListContent }) => {\n   const { module, filter } = useSelector((e) => e.redux);\n   const observerTarget = useRef(null);\n   const dispatch = useDispatch();\n\n   // bool\n   const [bottomOfPage, setBottomOfPage] = useState(false);\n\n   useLayoutEffect(() => {\n      h.arrLength(listContent) &&\n         lozad(\".lozad\", {\n            enableAutoReload: true,\n         }).observe();\n      return () => {};\n   }, [listContent]);\n\n   useLayoutEffect(() => {\n      const observer = new IntersectionObserver(\n         (entries) => {\n            if (entries[0].isIntersecting) {\n               setBottomOfPage(true);\n            }\n         },\n         { threshold: 1 }\n      );\n\n      if (observerTarget.current) {\n         observer.observe(observerTarget.current);\n      }\n      return () => {\n         if (observerTarget.current) {\n            observer.unobserve(observerTarget.current);\n         }\n      };\n   }, [observerTarget, listContent]);\n\n   useLayoutEffect(() => {\n      if (bottomOfPage && totalData > listContent.length) getContent({ ...filter, page: h.toInt(filter.page) + 1 });\n      return () => setBottomOfPage(false);\n   }, [bottomOfPage, totalData, listContent, filter]);\n\n   const removeItemById = (arr, id) => {\n      return arr.filter((item) => h.toInt(h.parse(\"id\", item)) !== id);\n   };\n\n   const handleHapus = (row) => {\n      h.confirmDelete({\n         msg: `Apakah anda yakin ingin menghapus ${h.parse(\"origname\", row)}`,\n         url: \"/hapus\",\n         id: h.parse(\"id\", row),\n         custom: {\n            filename: h.parse(\"filename\", row),\n         },\n      }).then((res) => {\n         const { data } = res;\n         h.notification(data.status, data.msg_response);\n         if (!data.status) return;\n\n         const newData = removeItemById(listContent, h.toInt(h.parse(\"id\", row)));\n         setListContent(newData);\n         totalData = newData.length;\n      });\n   };\n\n   const handleEdit = (row) => {\n      dispatch(setModule({ ...module, openModalEditOrigName: true, detailContent: row }));\n   };\n\n   const props = { setListContent, listContent };\n\n   return (\n      <React.Suspense\n         fallback={\n            <Bars\n               visible={true}\n               color=\"#4fa94d\"\n               radius=\"9\"\n               wrapperStyle={{\n                  alignItems: \"center\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n               }}\n               wrapperClass=\"page-loader flex-column bg-dark bg-opacity-25\"\n            />\n         }>\n         <ModalEditOrigName {...props} />\n         <Each\n            of={listContent}\n            render={(row, index) => (\n               <Col md={4} className={index > 2 ? \"mt-6\" : \"\"}>\n                  <Card className=\"card-bordered shadow-sm\">\n                     <Card.Header>\n                        <h3 className=\"card-title\">{h.parse(\"origname\", row)}</h3>\n                        <div className=\"card-toolbar\">\n                           <Dropdown>\n                              <Dropdown.Toggle variant=\"light\" className=\"btn btn-sm\">\n                                 Aksi\n                              </Dropdown.Toggle>\n                              <Dropdown.Menu>\n                                 <Dropdown.Item onClick={() => handleEdit(row)}>Edit</Dropdown.Item>\n                                 <Dropdown.Item onClick={() => handleHapus(row)}>Hapus</Dropdown.Item>\n                              </Dropdown.Menu>\n                           </Dropdown>\n                        </div>\n                     </Card.Header>\n                     <Card.Body>\n                        <div className=\"text-center px-4\">\n                           <img\n                              className=\"mw-100 mh-300px card-rounded-bottom\"\n                              alt={h.parse(\"origname\", row)}\n                              src={`/getfile/images/${h.parse(\"filename\", row)}`}\n                           />\n                        </div>\n                     </Card.Body>\n                  </Card>\n               </Col>\n            )}\n         />\n         <div ref={observerTarget} />\n      </React.Suspense>\n   );\n};\nexport default Lists;\n"],
  "mappings": "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",
  "names": ["import_lozad", "import_react", "ModalEditOrigName", "React", "Lists", "totalData", "listContent", "getContent", "setListContent", "module", "filter", "useSelector", "e", "observerTarget", "dispatch", "useDispatch", "bottomOfPage", "setBottomOfPage", "arrLength", "lozad", "observer", "entries", "toInt", "removeItemById", "arr", "id", "item", "parse", "handleHapus", "row", "confirmDelete", "res", "data", "notification", "newData", "handleEdit", "setModule", "props", "$7dd1b251b360e95a$export$fbc7d6f7dd821b47", "Each", "index", "Col_default", "Card_default", "Dropdown_default", "Lists_default"]
}
