{
  "version": 3,
  "sources": ["../../src/page/Admin/Playlist/ModalScreen.jsx"],
  "sourcesContent": ["import React, { useLayoutEffect, useState } from \"react\";\nimport { Modal, Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Each } from \"~/Each\";\nimport * as h from \"~/Helpers\";\nimport { applyFilter, setModule } from \"~/redux\";\n\nconst ModalScreen = () => {\n   const { module, init, filter } = useSelector((e) => e.redux);\n   const { openModalScreen, daftarScreen, detailContent } = module;\n   const dispatch = useDispatch();\n\n   // array\n   const [screenActive, setScreenActive] = useState([]);\n\n   useLayoutEffect(() => {\n      if (openModalScreen && h.objLength(detailContent)) {\n         const updateScreenActive = [];\n         detailContent.screen_active.forEach((row) => {\n            updateScreenActive.push(h.toInt(h.parse(\"id_screen\", row)));\n         });\n         setScreenActive(updateScreenActive);\n      }\n      return () => {};\n   }, [openModalScreen, detailContent]);\n\n   const clearProps = () => {\n      dispatch(setModule({ ...module, openModalScreen: false, detailContent: {} }));\n   };\n\n   const submit = (row) => {\n      const formData = {\n         id_playlist: h.parse(\"id\", detailContent),\n         id_screen: h.parse(\"id\", row),\n         pageType: h.parse(\"pageType\", row),\n         user_modified: h.parse(\"username\", init),\n      };\n\n      const fetch = h.post(`/handlesetscreen`, formData);\n      fetch.then((res) => {\n         if (typeof res === \"undefined\") return;\n\n         const { data } = res;\n         if (typeof data.code !== \"undefined\" && h.parse(\"code\", data) !== 200) {\n            h.notification(false, h.parse(\"message\", data));\n            return;\n         }\n\n         h.notification(data.status, data.msg_response);\n\n         if (!data.status) return;\n\n         dispatch(applyFilter({ url: \"/getdata\", data: { ...filter } }));\n\n         if (h.parse(\"pageType\", row) === \"delete\") {\n            const updateScreenActive = [];\n            screenActive.forEach((id) => {\n               if (id !== h.parse(\"id\", row)) updateScreenActive.push(id);\n            });\n            setScreenActive(updateScreenActive);\n         } else {\n            setScreenActive((prev) => prev.concat(h.toInt(h.parse(\"id\", row))));\n         }\n      });\n   };\n\n   return (\n      <Modal show={openModalScreen} onHide={clearProps} backdrop=\"static\">\n         <Modal.Header closeButton>\n            <Modal.Title>Daftar Screen</Modal.Title>\n         </Modal.Header>\n         <Modal.Body>\n            <Table responsive hover className=\"align-middle table-row-dashed fs-6\" size=\"sm\">\n               <thead>\n                  <tr className=\"text-start text-gray-400 fw-bold fs-7 text-uppercase gs-0\">\n                     <th className=\"text-center\" style={{ width: \"5%\" }} />\n                     <th>kode</th>\n                     <th>nama</th>\n                  </tr>\n               </thead>\n               <tbody className=\"text-gray-600 fw-semibold\">\n                  <Each\n                     of={daftarScreen}\n                     render={(row) => (\n                        <tr\n                           style={{ cursor: \"pointer\" }}\n                           onClick={() => submit({ ...row, pageType: screenActive.includes(h.toInt(h.parse(\"id\", row))) ? \"delete\" : \"insert\" })}>\n                           <td className=\"text-center\">\n                              <input\n                                 className=\"form-check-input\"\n                                 type=\"checkbox\"\n                                 disabled={true}\n                                 checked={screenActive.includes(h.toInt(h.parse(\"id\", row)))}\n                              />\n                           </td>\n                           <td>{h.parse(\"kode\", row)}</td>\n                           <td>{h.parse(\"nama\", row)}</td>\n                        </tr>\n                     )}\n                  />\n               </tbody>\n            </Table>\n         </Modal.Body>\n      </Modal>\n   );\n};\nexport default ModalScreen;\n"],
  "mappings": "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",
  "names": ["import_react", "ModalScreen", "module", "init", "filter", "useSelector", "e", "openModalScreen", "daftarScreen", "detailContent", "dispatch", "useDispatch", "screenActive", "setScreenActive", "objLength", "updateScreenActive", "row", "toInt", "parse", "clearProps", "setModule", "submit", "formData", "post", "res", "data", "notification", "applyFilter", "id", "prev", "React", "Modal_default", "Table_default", "Each", "ModalScreen_default"]
}
