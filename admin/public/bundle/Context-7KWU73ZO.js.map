{
  "version": 3,
  "sources": ["../../src/page/Admin/Content/Video/Context.jsx"],
  "sourcesContent": ["import React, { useLayoutEffect, useState } from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport { Bars } from \"react-loader-spinner\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as h from \"~/Helpers\";\nimport { buttonConfig, position, filter as setFilter } from \"~/redux\";\n\nconst Lists = React.lazy(() => import(\"./Lists\"));\nconst Forms = React.lazy(() => import(\"./Forms\"));\nconst Filter = React.lazy(() => import(\"./Filter\"));\nconst ModalEditOrigName = React.lazy(() => import(\"./ModalEditOrigName\"));\n\nlet totalData = 0;\n\nconst Context = () => {\n   const { filter } = useSelector((e) => e.redux);\n   const dispatch = useDispatch();\n\n   // array\n   const [listContent, setListContent] = useState([]);\n\n   const getContent = (filter) => {\n      const formData = {};\n      Object.keys(filter).forEach((key) => (formData[key] = filter[key]));\n\n      const fetch = h.post(`/getdata`, formData);\n      fetch.then((res) => {\n         if (typeof res === \"undefined\") return;\n\n         const { data } = res;\n         if (typeof data.code !== \"undefined\" && h.parse(\"code\", data) !== 200) {\n            h.notification(false, h.parse(\"message\", data));\n            return;\n         }\n\n         totalData = data.totalData;\n         if (formData.source === \"filter\") {\n            setListContent(data.listContent);\n         } else {\n            setListContent((prev) => prev.concat(data.listContent));\n         }\n         dispatch(setFilter(formData));\n      });\n   };\n\n   useLayoutEffect(() => {\n      dispatch(position([\"Content\", document.title]));\n      dispatch(\n         buttonConfig({\n            label: `Tambah ${document.title}`,\n            type: \"add\",\n            loading: \"false\",\n         })\n      );\n      getContent({ page: 0 });\n      return () => {};\n   }, []);\n\n   const props = { totalData, getContent, listContent, setListContent };\n\n   return (\n      h.objLength(filter) && (\n         <Row>\n            <React.Suspense\n               fallback={\n                  <Bars\n                     visible={true}\n                     color=\"#4fa94d\"\n                     radius=\"9\"\n                     wrapperStyle={{\n                        alignItems: \"center\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                     }}\n                     wrapperClass=\"page-loader flex-column bg-dark bg-opacity-25\"\n                  />\n               }>\n               <ModalEditOrigName {...props} />\n               <Filter {...props} />\n               <Lists {...props} />\n               <Forms {...props} />\n            </React.Suspense>\n         </Row>\n      )\n   );\n};\nexport default Context;\n"],
  "mappings": "gXAAA,IAAAA,EAAiD,OAOjD,IAAMC,EAAQ,EAAAC,QAAM,KAAK,IAAM,OAAO,qBAAS,CAAC,EAC1CC,EAAQ,EAAAD,QAAM,KAAK,IAAM,OAAO,qBAAS,CAAC,EAC1CE,EAAS,EAAAF,QAAM,KAAK,IAAM,OAAO,sBAAU,CAAC,EAC5CG,EAAoB,EAAAH,QAAM,KAAK,IAAM,OAAO,iCAAqB,CAAC,EAEpEI,EAAY,EAEVC,EAAU,IAAM,CACnB,GAAM,CAAE,OAAAC,CAAO,EAAIC,EAAaC,GAAMA,EAAE,KAAK,EACvCC,EAAWC,EAAY,EAGvB,CAACC,EAAaC,CAAc,KAAI,YAAS,CAAC,CAAC,EAE3CC,EAAcP,GAAW,CAC5B,IAAMQ,EAAW,CAAC,EAClB,OAAO,KAAKR,CAAM,EAAE,QAASS,GAASD,EAASC,CAAG,EAAIT,EAAOS,CAAG,CAAE,EAElDC,EAAK,WAAYF,CAAQ,EACnC,KAAMG,GAAQ,CACjB,GAAI,OAAOA,EAAQ,IAAa,OAEhC,GAAM,CAAE,KAAAC,CAAK,EAAID,EACjB,GAAI,OAAOC,EAAK,KAAS,KAAiBC,EAAM,OAAQD,CAAI,IAAM,IAAK,CAClEE,EAAa,GAASD,EAAM,UAAWD,CAAI,CAAC,EAC9C,MACH,CAEAd,EAAYc,EAAK,UACbJ,EAAS,SAAW,SACrBF,EAAeM,EAAK,WAAW,EAE/BN,EAAgBS,GAASA,EAAK,OAAOH,EAAK,WAAW,CAAC,EAEzDT,EAASH,EAAUQ,CAAQ,CAAC,CAC/B,CAAC,CACJ,KAEA,mBAAgB,KACbL,EAASa,EAAS,CAAC,UAAW,SAAS,KAAK,CAAC,CAAC,EAC9Cb,EACGc,EAAa,CACV,MAAO,UAAU,SAAS,KAAK,GAC/B,KAAM,MACN,QAAS,OACZ,CAAC,CACJ,EACAV,EAAW,CAAE,KAAM,CAAE,CAAC,EACf,IAAM,CAAC,GACd,CAAC,CAAC,EAEL,IAAMW,EAAQ,CAAE,UAAApB,EAAW,WAAAS,EAAY,YAAAF,EAAa,eAAAC,CAAe,EAEnE,OACKa,EAAUnB,CAAM,GACf,EAAAN,QAAA,cAAC0B,EAAA,KACE,EAAA1B,QAAA,cAAC,EAAAA,QAAM,SAAN,CACE,SACG,EAAAA,QAAA,cAAC2B,EAAA,CACE,QAAS,GACT,MAAM,UACN,OAAO,IACP,aAAc,CACX,WAAY,SACZ,QAAS,OACT,eAAgB,QACnB,EACA,aAAa,gDAChB,GAEH,EAAA3B,QAAA,cAACG,EAAA,CAAmB,GAAGqB,EAAO,EAC9B,EAAAxB,QAAA,cAACE,EAAA,CAAQ,GAAGsB,EAAO,EACnB,EAAAxB,QAAA,cAACD,EAAA,CAAO,GAAGyB,EAAO,EAClB,EAAAxB,QAAA,cAACC,EAAA,CAAO,GAAGuB,EAAO,CACrB,CACH,CAGT,EACOI,EAAQvB",
  "names": ["import_react", "Lists", "React", "Forms", "Filter", "ModalEditOrigName", "totalData", "Context", "filter", "useSelector", "e", "dispatch", "useDispatch", "listContent", "setListContent", "getContent", "formData", "key", "post", "res", "data", "parse", "notification", "prev", "position", "buttonConfig", "props", "objLength", "Row_default", "$7dd1b251b360e95a$export$fbc7d6f7dd821b47", "Context_default"]
}
