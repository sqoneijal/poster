{
  "version": 3,
  "sources": ["../../src/page/Admin/Playlist/Context.jsx"],
  "sourcesContent": ["import React, { useLayoutEffect, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Bars } from \"react-loader-spinner\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as h from \"~/Helpers\";\nimport { buttonConfig, setModule } from \"~/redux\";\n\nconst Lists = React.lazy(() => import(\"./Lists\"));\nconst Forms = React.lazy(() => import(\"./Forms\"));\nconst ModalScreen = React.lazy(() => import(\"./ModalScreen\"));\nconst Filter = React.lazy(() => import(\"./Filter\"));\nconst FormsContent = React.lazy(() => import(\"./FormsContent\"));\n\nconst Context = () => {\n   const { module } = useSelector((e) => e.redux);\n   const dispatch = useDispatch();\n\n   // bool\n   const [isLoading, setIsLoading] = useState(true);\n\n   const initPage = () => {\n      const fetch = h.get(`/initpage`);\n      fetch.then((res) => {\n         if (typeof res === \"undefined\") return;\n\n         const { data } = res;\n\n         if (typeof data.code !== \"undefined\" && h.parse(\"code\", data) !== 200) {\n            h.notification(false, h.parse(\"message\", data));\n            return;\n         }\n\n         dispatch(setModule({ ...module, ...data }));\n      });\n      fetch.finally(() => {\n         setIsLoading(false);\n      });\n   };\n\n   useLayoutEffect(() => {\n      dispatch(\n         buttonConfig({\n            label: `Tambah ${document.title}`,\n            type: \"add\",\n            loading: \"false\",\n         })\n      );\n      initPage();\n      return () => {};\n   }, []);\n\n   return (\n      !isLoading && (\n         <Card className=\"shadow-sm card-bordered\">\n            <Card.Body>\n               <React.Suspense\n                  fallback={\n                     <Bars\n                        visible={true}\n                        color=\"#4fa94d\"\n                        radius=\"9\"\n                        wrapperStyle={{\n                           alignItems: \"center\",\n                           display: \"flex\",\n                           justifyContent: \"center\",\n                        }}\n                        wrapperClass=\"page-loader flex-column bg-dark bg-opacity-25\"\n                     />\n                  }>\n                  <Filter />\n                  <Lists />\n                  <Forms />\n                  <ModalScreen />\n                  <FormsContent />\n               </React.Suspense>\n            </Card.Body>\n         </Card>\n      )\n   );\n};\nexport default Context;\n"],
  "mappings": "uWAAA,IAAAA,EAAiD,OAOjD,IAAMC,EAAQ,EAAAC,QAAM,KAAK,IAAM,OAAO,qBAAS,CAAC,EAC1CC,EAAQ,EAAAD,QAAM,KAAK,IAAM,OAAO,qBAAS,CAAC,EAC1CE,EAAc,EAAAF,QAAM,KAAK,IAAM,OAAO,2BAAe,CAAC,EACtDG,EAAS,EAAAH,QAAM,KAAK,IAAM,OAAO,sBAAU,CAAC,EAC5CI,EAAe,EAAAJ,QAAM,KAAK,IAAM,OAAO,4BAAgB,CAAC,EAExDK,EAAU,IAAM,CACnB,GAAM,CAAE,OAAAC,CAAO,EAAIC,EAAaC,GAAMA,EAAE,KAAK,EACvCC,EAAWC,EAAY,EAGvB,CAACC,EAAWC,CAAY,KAAI,YAAS,EAAI,EAEzCC,EAAW,IAAM,CACpB,IAAMC,EAAUC,EAAI,WAAW,EAC/BD,EAAM,KAAME,GAAQ,CACjB,GAAI,OAAOA,EAAQ,IAAa,OAEhC,GAAM,CAAE,KAAAC,CAAK,EAAID,EAEjB,GAAI,OAAOC,EAAK,KAAS,KAAiBC,EAAM,OAAQD,CAAI,IAAM,IAAK,CAClEE,EAAa,GAASD,EAAM,UAAWD,CAAI,CAAC,EAC9C,MACH,CAEAR,EAASW,EAAU,CAAE,GAAGd,EAAQ,GAAGW,CAAK,CAAC,CAAC,CAC7C,CAAC,EACDH,EAAM,QAAQ,IAAM,CACjBF,EAAa,EAAK,CACrB,CAAC,CACJ,EAEA,4BAAgB,KACbH,EACGY,EAAa,CACV,MAAO,UAAU,SAAS,KAAK,GAC/B,KAAM,MACN,QAAS,OACZ,CAAC,CACJ,EACAR,EAAS,EACF,IAAM,CAAC,GACd,CAAC,CAAC,EAGF,CAACF,GACE,EAAAX,QAAA,cAACsB,EAAA,CAAK,UAAU,2BACb,EAAAtB,QAAA,cAACsB,EAAK,KAAL,KACE,EAAAtB,QAAA,cAAC,EAAAA,QAAM,SAAN,CACE,SACG,EAAAA,QAAA,cAACuB,EAAA,CACE,QAAS,GACT,MAAM,UACN,OAAO,IACP,aAAc,CACX,WAAY,SACZ,QAAS,OACT,eAAgB,QACnB,EACA,aAAa,gDAChB,GAEH,EAAAvB,QAAA,cAACG,EAAA,IAAO,EACR,EAAAH,QAAA,cAACD,EAAA,IAAM,EACP,EAAAC,QAAA,cAACC,EAAA,IAAM,EACP,EAAAD,QAAA,cAACE,EAAA,IAAY,EACb,EAAAF,QAAA,cAACI,EAAA,IAAa,CACjB,CACH,CACH,CAGT,EACOoB,EAAQnB",
  "names": ["import_react", "Lists", "React", "Forms", "ModalScreen", "Filter", "FormsContent", "Context", "module", "useSelector", "e", "dispatch", "useDispatch", "isLoading", "setIsLoading", "initPage", "fetch", "get", "res", "data", "parse", "notification", "setModule", "buttonConfig", "Card_default", "$7dd1b251b360e95a$export$fbc7d6f7dd821b47", "Context_default"]
}
