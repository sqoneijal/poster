{
  "version": 3,
  "sources": ["../../src/layout/partials/sidebar/Menu.jsx", "../../src/Show.jsx", "../../src/layout/partials/sidebar/Navigation.json"],
  "sourcesContent": ["import React, { useLayoutEffect, useState } from \"react\";\nimport { Accordion, AccordionButton } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Each } from \"~/Each\";\nimport * as h from \"~/Helpers\";\nimport { Show } from \"~/Show\";\nimport { buttonConfig, filter, position, setModule, showButton } from \"~/redux\";\nimport Navigation from \"./Navigation.json\";\n\nconst Menu = () => {\n   const dispatch = useDispatch();\n   const location = useLocation();\n\n   // string\n   const [defaultActiveKey, setDefaultActiveKey] = useState(0);\n\n   useLayoutEffect(() => {\n      let active = 0;\n      Navigation.map((row, index) => {\n         row.sub &&\n            row.child.map((item) => {\n               if (h.parse(\"pathname\", location) === h.parse(\"pathname\", item)) {\n                  active = index;\n               }\n            });\n      });\n      setDefaultActiveKey(active);\n      return () => {};\n   }, [location, Navigation]);\n\n   const handleChangeNav = (params = {}) => {\n      if (h.parse(\"pathname\", params) === h.parse(\"currentLocation\", params)) {\n         return;\n      }\n      dispatch(position([]));\n      dispatch(filter({}));\n      dispatch(setModule({}));\n      dispatch(showButton(false));\n      dispatch(buttonConfig({}));\n   };\n\n   return (\n      <div className=\"app-sidebar-menu overflow-hidden flex-column-fluid\">\n         <div id=\"kt_app_sidebar_menu_wrapper\" className=\"app-sidebar-wrapper\">\n            <div id=\"kt_app_sidebar_menu_scroll\" className=\"scroll-y my-5 mx-3\" style={{ height: window.innerHeight - 100 }}>\n               <Accordion\n                  bsPrefix=\"menu menu-column menu-rounded menu-sub-indention fw-semibold fs-6\"\n                  defaultActiveKey={0}\n                  activeKey={defaultActiveKey}>\n                  <Each\n                     of={Navigation}\n                     render={(row, index) => (\n                        <Show>\n                           <Show.When isTrue={row.sub}>\n                              <Accordion.Item className=\"menu-item\" eventKey={index}>\n                                 <AccordionButton\n                                    as=\"span\"\n                                    bsPrefix={`menu-link ${\n                                       h.parse(\"child\", row) && row.child.find((item) => h.parse(\"pathname\", item) === h.parse(\"pathname\", location))\n                                          ? \"active\"\n                                          : \"\"\n                                    }`}\n                                    onClick={() => setDefaultActiveKey(index)}>\n                                    <span className=\"menu-icon\">\n                                       <i className={h.parse(\"icon\", row)} />\n                                    </span>\n                                    <span className=\"menu-title\">{h.parse(\"label\", row)}</span>\n                                    <span className=\"menu-arrow\" />\n                                 </AccordionButton>\n                                 <Accordion.Body className=\"menu-sub menu-sub-accordion\">\n                                    <Each\n                                       of={row.child}\n                                       render={(item) => (\n                                          <div className=\"menu-item\">\n                                             <Link\n                                                className={`menu-link ${h.parse(\"pathname\", location) === h.parse(\"pathname\", item) ? \"active\" : \"\"}`}\n                                                to={h.parse(\"pathname\", item)}\n                                                onClick={() => {\n                                                   handleChangeNav({\n                                                      pathname: h.parse(\"pathname\", item),\n                                                      currentLocation: h.parse(\"pathname\", location),\n                                                   });\n                                                   document.title = h.parse(\"label\", item);\n                                                }}>\n                                                <span className=\"menu-bullet\">\n                                                   <span className=\"bullet bullet-dot\" />\n                                                </span>\n                                                <span className=\"menu-title\">{h.parse(\"label\", item)}</span>\n                                             </Link>\n                                          </div>\n                                       )}\n                                    />\n                                 </Accordion.Body>\n                              </Accordion.Item>\n                           </Show.When>\n                           <Show.Else>\n                              <div className=\"menu-item\">\n                                 <Link\n                                    to={h.parse(\"pathname\", row)}\n                                    className={`menu-link ${h.parse(\"pathname\", location) === h.parse(\"pathname\", row) ? \"active\" : \"\"}`}\n                                    onClick={() => {\n                                       handleChangeNav({\n                                          pathname: h.parse(\"pathname\", row),\n                                          currentLocation: h.parse(\"pathname\", location),\n                                       });\n                                       document.title = h.parse(\"label\", row);\n                                    }}>\n                                    <span className=\"menu-icon\">\n                                       <i className={h.parse(\"icon\", row)} />\n                                    </span>\n                                    <span className=\"menu-title\">{h.parse(\"label\", row)}</span>\n                                 </Link>\n                              </div>\n                           </Show.Else>\n                        </Show>\n                     )}\n                  />\n               </Accordion>\n            </div>\n         </div>\n      </div>\n   );\n};\nexport default Menu;\n", "import { Children } from \"react\";\n\nexport const Show = (props) => {\n   let when = null;\n   let otherWise = null;\n\n   Children.forEach(props.children, (children) => {\n      if (children.props.isTrue === undefined) {\n         otherWise = children;\n      } else if (!when && children.props.isTrue === true) {\n         when = children;\n      }\n   });\n\n   return when || otherWise;\n};\n\nShow.When = ({ isTrue, children }) => isTrue && children;\nShow.Else = ({ render, children }) => render || children;\n", "[\n   {\n      \"label\": \"Dashboard\",\n      \"icon\": \"ki-outline ki-element-11 fs-2\",\n      \"pathname\": \"/\",\n      \"sub\": false\n   },\n   {\n      \"label\": \"Content\",\n      \"icon\": \"ki-outline ki-data fs-2\",\n      \"pathname\": \"/content\",\n      \"sub\": true,\n      \"child\": [\n         {\n            \"label\": \"Images\",\n            \"pathname\": \"/content/images\",\n            \"sub\": false\n         },\n         {\n            \"label\": \"Video\",\n            \"pathname\": \"/content/video\",\n            \"sub\": false\n         },\n         {\n            \"label\": \"Youtube\",\n            \"pathname\": \"/content/youtube\",\n            \"sub\": false\n         },\n         {\n            \"label\": \"Running Text\",\n            \"pathname\": \"/content/runningtext\",\n            \"sub\": false\n         },\n         {\n            \"label\": \"Pengumuman\",\n            \"pathname\": \"/content/pengumuman\",\n            \"sub\": false\n         }\n      ]\n   },\n   {\n      \"label\": \"Playlist\",\n      \"icon\": \"ki-outline ki-text-number fs-2\",\n      \"pathname\": \"/playlist\",\n      \"sub\": false\n   },\n   {\n      \"label\": \"Screen\",\n      \"icon\": \"ki-outline ki-monitor-mobile fs-2\",\n      \"pathname\": \"/screen\",\n      \"sub\": false\n   }\n]\n"],
  "mappings": "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",
  "names": ["import_react", "import_react", "Show", "props", "when", "otherWise", "children", "isTrue", "render", "Navigation_default", "Menu", "dispatch", "useDispatch", "location", "useLocation", "defaultActiveKey", "setDefaultActiveKey", "active", "Navigation_default", "row", "index", "item", "parse", "handleChangeNav", "params", "position", "filter", "setModule", "showButton", "buttonConfig", "React", "Accordion_default", "Each", "Show", "AccordionButton_default", "Link", "Menu_default"]
}
