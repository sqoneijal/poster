{
  "version": 3,
  "sources": ["../../src/page/Admin/Playlist/Tabs/Video.jsx"],
  "sourcesContent": ["import React, { useLayoutEffect, useRef, useState } from \"react\";\nimport { Card, Col, Row } from \"react-bootstrap\";\nimport { Each } from \"~/Each\";\nimport * as h from \"~/Helpers\";\nimport Filter from \"./Filter\";\n\nlet totalData = 0;\n\nconst Video = ({ selectedVideo, setSelectedVideo }) => {\n   const observerTarget = useRef(null);\n\n   // bool\n   const [isLoading, setIsLoading] = useState(true);\n   const [bottomOfPage, setBottomOfPage] = useState(false);\n\n   // array\n   const [listContent, setListContent] = useState([]);\n\n   // object\n   const [filter, setFilter] = useState({});\n\n   const handleSelected = (selected, data) => {\n      if (h.arrLength(selected)) {\n         if (selected.includes(h.toInt(h.parse(\"id\", data)))) {\n            const updateSelected = [];\n            selected.forEach((id) => {\n               if (id !== h.toInt(h.parse(\"id\", data))) updateSelected.push(id);\n            });\n            setSelectedVideo(updateSelected);\n         } else {\n            setSelectedVideo([...selected, h.toInt(h.parse(\"id\", data))]);\n         }\n      } else {\n         setSelectedVideo([...selected, h.toInt(h.parse(\"id\", data))]);\n      }\n   };\n\n   const getData = (filter) => {\n      const fetch = h.get(`/getdaftarvideo?${h.serialize(filter)}`);\n      fetch.then((res) => {\n         if (typeof res === \"undefined\") return;\n\n         const { data } = res;\n\n         if (typeof data.code !== \"undefined\" && h.parse(\"code\", data) !== 200) {\n            h.notification(false, h.parse(\"message\", data));\n            return;\n         }\n\n         if (h.parse(\"source\", filter) && h.parse(\"source\", filter) === \"filter\") {\n            setListContent(data.listContent);\n         } else {\n            setListContent((prev) => prev.concat(data.listContent));\n         }\n         totalData = data.totalData;\n         setFilter({ ...filter, source: \"\" });\n      });\n      fetch.finally(() => {\n         setIsLoading(false);\n      });\n   };\n\n   useLayoutEffect(() => {\n      getData({ page: 0 });\n      return () => {};\n   }, []);\n\n   useLayoutEffect(() => {\n      const observer = new IntersectionObserver(\n         (entries) => {\n            if (entries[0].isIntersecting) {\n               setBottomOfPage(true);\n            }\n         },\n         { threshold: 1 }\n      );\n\n      if (observerTarget.current) {\n         observer.observe(observerTarget.current);\n      }\n      return () => {\n         if (observerTarget.current) {\n            observer.unobserve(observerTarget.current);\n         }\n      };\n   }, [observerTarget, listContent]);\n\n   useLayoutEffect(() => {\n      if (bottomOfPage && totalData > listContent.length && !isLoading) getData({ ...filter, source: \"\", page: h.toInt(filter.page) + 1 });\n      return () => setBottomOfPage(false);\n   }, [bottomOfPage, totalData, listContent, filter, isLoading]);\n\n   const props = { filter, setFilter, getData };\n\n   return (\n      <Row>\n         <Filter {...props} />\n         <Each\n            of={listContent}\n            render={(row, index) => (\n               <Col\n                  md={4}\n                  xs={12}\n                  className={`${index > 2 ? \"mt-5\" : \"\"} col-hover ${\n                     selectedVideo.includes(h.toInt(h.parse(\"id\", row))) ? \"col-hover-selected\" : \"\"\n                  }`}\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => handleSelected(selectedVideo, row)}>\n                  <Card.Body className=\"p-2\">\n                     <h5 className=\"card-title\">{h.parse(\"judul\", row)}</h5>\n                     <video className=\"w-100 h-100\" controls>\n                        <source src={`/video/${h.parse(\"video_file\", row)}`} type={h.parse(\"video_type\", row)} />\n                        Your browser does not support the video tag.\n                     </video>\n                  </Card.Body>\n               </Col>\n            )}\n         />\n         <div ref={observerTarget} />\n      </Row>\n   );\n};\nexport default Video;\n"],
  "mappings": "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",
  "names": ["import_react", "totalData", "Video", "selectedVideo", "setSelectedVideo", "observerTarget", "isLoading", "setIsLoading", "bottomOfPage", "setBottomOfPage", "listContent", "setListContent", "filter", "setFilter", "handleSelected", "selected", "data", "arrLength", "toInt", "parse", "updateSelected", "id", "getData", "fetch", "get", "serialize", "res", "notification", "prev", "observer", "entries", "React", "Row_default", "Filter_default", "Each", "row", "index", "Col_default", "Card_default", "Video_default"]
}
