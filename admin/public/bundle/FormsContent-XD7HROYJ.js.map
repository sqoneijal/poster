{
  "version": 3,
  "sources": ["../../src/page/Admin/Playlist/FormsContent.jsx"],
  "sourcesContent": ["import React, { useLayoutEffect, useState } from \"react\";\nimport { ButtonGroup, Card } from \"react-bootstrap\";\nimport { Bars } from \"react-loader-spinner\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Switch, { Case } from \"react-switch-case\";\nimport { Each } from \"~/Each\";\nimport * as h from \"~/Helpers\";\nimport { setModule } from \"~/redux\";\n\nconst Images = React.lazy(() => import(\"./Tabs/Images\"));\nconst Video = React.lazy(() => import(\"./Tabs/Video\"));\nconst Youtube = React.lazy(() => import(\"./Tabs/Youtube\"));\nconst RunningText = React.lazy(() => import(\"./Tabs/RunningText\"));\nconst Pengumuman = React.lazy(() => import(\"./Tabs/Pengumuman\"));\n\nconst FormsContent = () => {\n   const { module, init, websocket } = useSelector((e) => e.redux);\n   const { openFormsContent, detailContent } = module;\n   const dispatch = useDispatch();\n\n   const socket = new WebSocket(websocket);\n\n   // bool\n   const [isSubmit, setIsSubmit] = useState(false);\n\n   // array\n   const [selectedImages, setSelectedImages] = useState([]);\n   const [selectedVideo, setSelectedVideo] = useState([]);\n   const [selectedYoutube, setSelectedYoutube] = useState([]);\n   const [selectedRunningText, setSelectedRunningText] = useState([]);\n   const [selectedPengumuman, setSelectedPengumuman] = useState([]);\n\n   // string\n   const [tabActive, setTabActive] = useState(1);\n\n   useLayoutEffect(() => {\n      if (openFormsContent && h.objLength(detailContent)) {\n         setSelectedImages(detailContent.images);\n         setSelectedVideo(detailContent.video);\n         setSelectedYoutube(detailContent.youtube);\n         setSelectedRunningText(detailContent.running_text);\n         setSelectedPengumuman(detailContent.pengumuman);\n      }\n      return () => {};\n   }, [openFormsContent, detailContent]);\n\n   const clearProps = () => {\n      setSelectedImages([]);\n      setSelectedVideo([]);\n      setSelectedYoutube([]);\n      setSelectedRunningText([]);\n      setSelectedPengumuman([]);\n      setTabActive(1);\n   };\n\n   const handleClose = () => {\n      clearProps();\n      dispatch(setModule({ ...module, openFormsContent: false, detailContent: {} }));\n   };\n\n   const submit = (e) => {\n      e.preventDefault();\n      const formData = {\n         id: h.parse(\"id\", detailContent),\n         user_modified: h.parse(\"username\", init),\n         images: JSON.stringify(h.arrLength(selectedImages) ? selectedImages : []),\n         video: JSON.stringify(h.arrLength(selectedVideo) ? selectedVideo : []),\n         youtube: JSON.stringify(h.arrLength(selectedYoutube) ? selectedYoutube : []),\n         running_text: JSON.stringify(h.arrLength(selectedRunningText) ? selectedRunningText : []),\n         pengumuman: JSON.stringify(h.arrLength(selectedPengumuman) ? selectedPengumuman : []),\n      };\n\n      setIsSubmit(true);\n      const fetch = h.post(`/submitcontent`, formData);\n      fetch.then((res) => {\n         if (typeof res === \"undefined\") return;\n\n         const { data } = res;\n         if (typeof data.code !== \"undefined\" && h.parse(\"code\", data) !== 200) {\n            h.notification(false, h.parse(\"message\", data));\n            return;\n         }\n\n         h.notification(data.status, data.msg_response);\n\n         if (!data.status) return;\n         clearProps();\n         dispatch(setModule({ ...module, openFormsContent: false, detailContent: {} }));\n         h.dtReload();\n\n         if (socket.readyState) {\n            console.log(JSON.stringify(detailContent.screen_active));\n            socket.send(JSON.stringify(detailContent.screen_active));\n         }\n      });\n      fetch.finally(() => {\n         setIsSubmit(false);\n      });\n   };\n\n   const daftarTabs = [\n      { value: 1, label: \"Images\" },\n      { value: 2, label: \"Video\" },\n      { value: 3, label: \"Youtube\" },\n      { value: 4, label: \"Running Text\" },\n      { value: 5, label: \"Pengumuman\" },\n   ];\n\n   const props = {\n      selectedImages,\n      setSelectedImages,\n      selectedVideo,\n      setSelectedVideo,\n      selectedYoutube,\n      setSelectedYoutube,\n      selectedRunningText,\n      setSelectedRunningText,\n      selectedPengumuman,\n      setSelectedPengumuman,\n   };\n\n   return (\n      <React.Fragment>\n         {openFormsContent && <div className=\"drawer-overlay\" />}\n         <div className={`bg-white drawer drawer-start ${openFormsContent ? \"drawer-on\" : \"\"}`} style={{ width: window.innerWidth / 2 }}>\n            <Card className=\"rounded-0 w-100\">\n               <Card.Header className=\"pe-5\">\n                  <div className=\"card-title\">\n                     <div className=\"d-flex justify-content-center flex-column me-3\">\n                        <span className=\"fs-4 fw-bold text-gray-900 text-hover-primary me-1 lh-1\">Daftar Content</span>\n                     </div>\n                  </div>\n                  <div className=\"card-toolbar\">\n                     <button className=\"btn btn-sm btn-icon btn-active-light-primary\" onClick={handleClose}>\n                        <i className=\"ki-duotone ki-cross fs-2\">\n                           <span className=\"path1\" />\n                           <span className=\"path2\" />\n                        </i>\n                     </button>\n                  </div>\n               </Card.Header>\n               <Card.Body className=\"hover-scroll-overlay-y\">\n                  <ul className=\"nav nav-tabs nav-line-tabs mb-5 fs-6\">\n                     <Each\n                        of={daftarTabs}\n                        render={(row) => (\n                           <li className=\"nav-item\">\n                              <a\n                                 className={`nav-link ${tabActive === h.parse(\"value\", row) ? \"active\" : \"\"}`}\n                                 data-bs-toggle=\"tab\"\n                                 href=\"#\"\n                                 onClick={(e) => {\n                                    e.preventDefault();\n                                    setTabActive(h.parse(\"value\", row));\n                                 }}>\n                                 {h.parse(\"label\", row)}\n                              </a>\n                           </li>\n                        )}\n                     />\n                  </ul>\n                  <div className=\"tab-content\">\n                     <div className=\"tab-pane fade show active\" role=\"tabpanel\">\n                        <React.Suspense\n                           fallback={\n                              <Bars\n                                 visible={true}\n                                 color=\"#4fa94d\"\n                                 radius=\"9\"\n                                 wrapperStyle={{\n                                    alignItems: \"center\",\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                 }}\n                                 wrapperClass=\"page-loader flex-column bg-dark bg-opacity-25\"\n                              />\n                           }>\n                           <Switch condition={tabActive}>\n                              <Case value={1}>\n                                 <Images {...props} />\n                              </Case>\n                              <Case value={2}>\n                                 <Video {...props} />\n                              </Case>\n                              <Case value={3}>\n                                 <Youtube {...props} />\n                              </Case>\n                              <Case value={4}>\n                                 <RunningText {...props} />\n                              </Case>\n                              <Case value={5}>\n                                 <Pengumuman {...props} />\n                              </Case>\n                           </Switch>\n                        </React.Suspense>\n                     </div>\n                  </div>\n               </Card.Body>\n               <Card.Footer className=\"text-end\">\n                  <ButtonGroup>\n                     {h.buttons(`Simpan`, isSubmit, {\n                        onClick: isSubmit ? null : submit,\n                     })}\n                     {h.buttons(`Batal`, false, {\n                        variant: \"danger\",\n                        onClick: () => handleClose(),\n                     })}\n                  </ButtonGroup>\n               </Card.Footer>\n            </Card>\n         </div>\n      </React.Fragment>\n   );\n};\nexport default FormsContent;\n"],
  "mappings": "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",
  "names": ["import_react", "import_react_switch_case", "Images", "React", "Video", "Youtube", "RunningText", "Pengumuman", "FormsContent", "module", "init", "websocket", "useSelector", "e", "openFormsContent", "detailContent", "dispatch", "useDispatch", "socket", "isSubmit", "setIsSubmit", "selectedImages", "setSelectedImages", "selectedVideo", "setSelectedVideo", "selectedYoutube", "setSelectedYoutube", "selectedRunningText", "setSelectedRunningText", "selectedPengumuman", "setSelectedPengumuman", "tabActive", "setTabActive", "objLength", "clearProps", "handleClose", "setModule", "submit", "formData", "parse", "arrLength", "fetch", "post", "res", "data", "notification", "dtReload", "daftarTabs", "props", "Card_default", "Each", "row", "$7dd1b251b360e95a$export$fbc7d6f7dd821b47", "Switch", "ButtonGroup_default", "buttons", "FormsContent_default"]
}
