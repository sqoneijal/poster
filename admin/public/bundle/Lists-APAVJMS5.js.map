{
  "version": 3,
  "sources": ["../../src/page/Admin/Content/Video/Lists.jsx"],
  "sourcesContent": ["import React, { useLayoutEffect, useRef, useState } from \"react\";\nimport { Card, Col, Dropdown, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Each } from \"~/Each\";\nimport * as h from \"~/Helpers\";\nimport { setModule } from \"~/redux\";\n\nconst Lists = ({ totalData, getContent, listContent, setListContent }) => {\n   const { filter, module } = useSelector((e) => e.redux);\n   const { page } = filter;\n   const observerTarget = useRef(null);\n   const dispatch = useDispatch();\n\n   // bool\n   const [bottomOfPage, setBottomOfPage] = useState(false);\n\n   useLayoutEffect(() => {\n      if (bottomOfPage && totalData > listContent.length) getContent({ filter });\n      return () => setBottomOfPage(false);\n   }, [bottomOfPage, page, totalData, listContent, filter]);\n\n   useLayoutEffect(() => {\n      const observer = new IntersectionObserver(\n         (entries) => {\n            if (entries[0].isIntersecting) {\n               setBottomOfPage(true);\n            }\n         },\n         { threshold: 1 }\n      );\n\n      if (observerTarget.current) {\n         observer.observe(observerTarget.current);\n      }\n      return () => {\n         if (observerTarget.current) {\n            observer.unobserve(observerTarget.current);\n         }\n      };\n   }, [observerTarget, listContent]);\n\n   const handleEdit = (row) => {\n      dispatch(setModule({ ...module, openModalEditOrigName: true, detailContent: row }));\n   };\n\n   const removeItemById = (arr, id) => {\n      return arr.filter((item) => h.toInt(h.parse(\"id\", item)) !== id);\n   };\n\n   const handleHapus = (row) => {\n      h.confirmDelete({\n         msg: `Apakah anda yakin ingin menghapus ${h.parse(\"judul\", row)}`,\n         url: \"/hapus\",\n         id: h.parse(\"id\", row),\n         custom: {\n            video_file: h.parse(\"video_file\", row),\n         },\n      }).then((res) => {\n         const { data } = res;\n         h.notification(data.status, data.msg_response);\n         if (!data.status) return;\n         const newData = removeItemById(listContent, h.toInt(h.parse(\"id\", row)));\n         setListContent(newData);\n         totalData = newData.length;\n      });\n   };\n\n   return (\n      <React.Fragment>\n         <Each\n            of={listContent}\n            render={(row, index) => (\n               <Col md={4} className={index > 2 ? \"mt-6\" : \"\"}>\n                  <Card className=\"card-bordered shadow-sm\">\n                     <Card.Header>\n                        <OverlayTrigger placement=\"top\" overlay={<Tooltip>{h.parse(\"judul\", row)}</Tooltip>}>\n                           <h3 className=\"card-title\">{h.parse(\"judul\", row)}</h3>\n                        </OverlayTrigger>\n                        <div className=\"card-toolbar\">\n                           <Dropdown>\n                              <Dropdown.Toggle variant=\"light\" className=\"btn btn-sm\">\n                                 Aksi\n                              </Dropdown.Toggle>\n                              <Dropdown.Menu>\n                                 <Dropdown.Item onClick={() => handleEdit(row)}>Edit</Dropdown.Item>\n                                 <Dropdown.Item onClick={() => handleHapus(row)}>Hapus</Dropdown.Item>\n                              </Dropdown.Menu>\n                           </Dropdown>\n                        </div>\n                     </Card.Header>\n                     <Card.Body>\n                        <video className=\"w-100 h-100\" controls>\n                           <source src={`/video/${h.parse(\"video_file\", row)}`} type={h.parse(\"video_type\", row)} />\n                           Your browser does not support the video tag.\n                        </video>\n                     </Card.Body>\n                  </Card>\n               </Col>\n            )}\n         />\n         <div ref={observerTarget} />\n      </React.Fragment>\n   );\n};\nexport default Lists;\n"],
  "mappings": "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",
  "names": ["import_react", "Lists", "totalData", "getContent", "listContent", "setListContent", "filter", "module", "useSelector", "e", "page", "observerTarget", "dispatch", "useDispatch", "bottomOfPage", "setBottomOfPage", "observer", "entries", "handleEdit", "row", "setModule", "removeItemById", "arr", "id", "item", "toInt", "parse", "handleHapus", "confirmDelete", "res", "data", "notification", "newData", "React", "Each", "index", "Col_default", "Card_default", "OverlayTrigger_default", "Tooltip_default", "Dropdown_default", "Lists_default"]
}
